// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: an-gpon-pm-olt-traffic.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GponPmOltTraffics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOltTraffic []*GponPmOltTraffics_GponPmOltTraffic `protobuf:"bytes,1,rep,name=pm_olt_traffic,json=gpon-pm-olt-traffic,proto3" json:"pm_olt_traffic,omitempty"`
}

func (x *GponPmOltTraffics) Reset() {
	*x = GponPmOltTraffics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GponPmOltTraffics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GponPmOltTraffics) ProtoMessage() {}

func (x *GponPmOltTraffics) ProtoReflect() protoreflect.Message {
	mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GponPmOltTraffics.ProtoReflect.Descriptor instead.
func (*GponPmOltTraffics) Descriptor() ([]byte, []int) {
	return file_an_gpon_pm_olt_traffic_proto_rawDescGZIP(), []int{0}
}

func (x *GponPmOltTraffics) GetPmOltTraffic() []*GponPmOltTraffics_GponPmOltTraffic {
	if x != nil {
		return x.PmOltTraffic
	}
	return nil
}

type GponPmOltChannelTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOltChannelTraffic []*GponPmOltChannelTraffic_GponPmOltChannelTraffic `protobuf:"bytes,1,rep,name=pm_olt_channel_traffic,json=gpon-pm-olt-channel-traffic,proto3" json:"pm_olt_channel_traffic,omitempty"`
}

func (x *GponPmOltChannelTraffic) Reset() {
	*x = GponPmOltChannelTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GponPmOltChannelTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GponPmOltChannelTraffic) ProtoMessage() {}

func (x *GponPmOltChannelTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GponPmOltChannelTraffic.ProtoReflect.Descriptor instead.
func (*GponPmOltChannelTraffic) Descriptor() ([]byte, []int) {
	return file_an_gpon_pm_olt_traffic_proto_rawDescGZIP(), []int{1}
}

func (x *GponPmOltChannelTraffic) GetPmOltChannelTraffic() []*GponPmOltChannelTraffic_GponPmOltChannelTraffic {
	if x != nil {
		return x.PmOltChannelTraffic
	}
	return nil
}

type GponPmOltTraffics_GponPmOltTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//�˿�ID���ƣ���ʽ��gpon.f.s.p
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//GPON�˿ڷ��͵���̫֡�ֽ���
	PortTxBytes uint64 `protobuf:"varint,2,opt,name=port_tx_bytes,json=port-tx-bytes,proto3" json:"port_tx_bytes,omitempty"`
	//GPON�˿ڽ��յ���̫֡�ֽ���
	PortRxBytes uint64 `protobuf:"varint,3,opt,name=port_rx_bytes,json=port-rx-bytes,proto3" json:"port_rx_bytes,omitempty"`
	//GPON�˿ڷ��͵���̫֡��
	PortTxPkt uint64 `protobuf:"varint,4,opt,name=port_tx_pkt,json=port-tx-pkt,proto3" json:"port_tx_pkt,omitempty"`
	//GPON�˿ڽ��յ���̫֡��
	PortRxPkt uint64 `protobuf:"varint,5,opt,name=port_rx_pkt,json=port-rx-pkt,proto3" json:"port_rx_pkt,omitempty"`
	//GPON�˿����ж��ж���ͳ��
	PortTxDiscardPkt uint64 `protobuf:"varint,6,opt,name=port_tx_discard_pkt,json=port-tx-discard-pkt,proto3" json:"port_tx_discard_pkt,omitempty"`
	//GPON�˿ڿڽ��շ���������̫֡����һ����MAC��У������֡��
	PortRxDiscardPkt uint64 `protobuf:"varint,7,opt,name=port_rx_discard_pkt,json=port-rx-discard-pkt,proto3" json:"port_rx_discard_pkt,omitempty"`
	//GPON�˿ڽ��շ������̫֡CRC����֡��
	PortRxCrcErrorPkt uint64 `protobuf:"varint,8,opt,name=port_rx_crc_error_pkt,json=port-rx-crc-error-pkt,proto3" json:"port_rx_crc_error_pkt,omitempty"`
	//GPON�˿ڽ��շ���������̫֡����֡��
	PortRxOversizedDiscardPkt uint64 `protobuf:"varint,9,opt,name=port_rx_oversized_discard_pkt,json=port-rx-oversized-discard-pkt,proto3" json:"port_rx_oversized_discard_pkt,omitempty"`
	//GPON�˿ڽ��շ���������̫֡����֡��
	PortRxUndersizedDiscardPkt uint64 `protobuf:"varint,10,opt,name=port_rx_undersized_discard_pkt,json=port-rx-undersized-discard-pkt,proto3" json:"port_rx_undersized_discard_pkt,omitempty"`
	//GPON�˿ڽ��յ���̫֡����֡��
	PortRxErrorPkt uint64 `protobuf:"varint,11,opt,name=port_rx_error_pkt,json=port-rx-error-pkt,proto3" json:"port_rx_error_pkt,omitempty"`
	//GPON�˿�����ƽ�����ʣ���λkbps
	PortTxRate uint32 `protobuf:"varint,12,opt,name=port_tx_rate,json=port-tx-rate,proto3" json:"port_tx_rate,omitempty"`
	//GPON�˿�����ƽ�����ʣ���λkbps
	PortRxRate uint32 `protobuf:"varint,13,opt,name=port_rx_rate,json=port-rx-rate,proto3" json:"port_rx_rate,omitempty"`
	//GPON�˿������뼶��ֵ���ʣ���λkbps
	PortTxPeakRate uint32 `protobuf:"varint,14,opt,name=port_tx_peak_rate,json=port-tx-peak-rate,proto3" json:"port_tx_peak_rate,omitempty"`
	//GPON�˿������뼶��ֵ���ʣ���λkbps
	PortRxPeakRate uint32 `protobuf:"varint,15,opt,name=port_rx_peak_rate,json=port-rx-peak-rate,proto3" json:"port_rx_peak_rate,omitempty"`
}

func (x *GponPmOltTraffics_GponPmOltTraffic) Reset() {
	*x = GponPmOltTraffics_GponPmOltTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GponPmOltTraffics_GponPmOltTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GponPmOltTraffics_GponPmOltTraffic) ProtoMessage() {}

func (x *GponPmOltTraffics_GponPmOltTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GponPmOltTraffics_GponPmOltTraffic.ProtoReflect.Descriptor instead.
func (*GponPmOltTraffics_GponPmOltTraffic) Descriptor() ([]byte, []int) {
	return file_an_gpon_pm_olt_traffic_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortTxBytes() uint64 {
	if x != nil {
		return x.PortTxBytes
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxBytes() uint64 {
	if x != nil {
		return x.PortRxBytes
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortTxPkt() uint64 {
	if x != nil {
		return x.PortTxPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxPkt() uint64 {
	if x != nil {
		return x.PortRxPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortTxDiscardPkt() uint64 {
	if x != nil {
		return x.PortTxDiscardPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxDiscardPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxCrcErrorPkt() uint64 {
	if x != nil {
		return x.PortRxCrcErrorPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxOversizedDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxOversizedDiscardPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxUndersizedDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxUndersizedDiscardPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxErrorPkt() uint64 {
	if x != nil {
		return x.PortRxErrorPkt
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortTxRate() uint32 {
	if x != nil {
		return x.PortTxRate
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxRate() uint32 {
	if x != nil {
		return x.PortRxRate
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortTxPeakRate() uint32 {
	if x != nil {
		return x.PortTxPeakRate
	}
	return 0
}

func (x *GponPmOltTraffics_GponPmOltTraffic) GetPortRxPeakRate() uint32 {
	if x != nil {
		return x.PortRxPeakRate
	}
	return 0
}

type GponPmOltChannelTraffic_GponPmOltChannelTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//�˿�ID���ƣ���ʽ��gpon.f.s.p
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//ͨ����
	Channel uint32 `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	//GPON�˿ڷ��͵���̫֡�ֽ���
	PortTxBytes uint64 `protobuf:"varint,3,opt,name=port_tx_bytes,json=port-tx-bytes,proto3" json:"port_tx_bytes,omitempty"`
	//GPON�˿ڽ��յ���̫֡�ֽ���
	PortRxBytes uint64 `protobuf:"varint,4,opt,name=port_rx_bytes,json=port-rx-bytes,proto3" json:"port_rx_bytes,omitempty"`
	//GPON�˿ڷ��͵���̫֡��
	PortTxPkt uint64 `protobuf:"varint,5,opt,name=port_tx_pkt,json=port-tx-pkt,proto3" json:"port_tx_pkt,omitempty"`
	//GPON�˿ڽ��յ���̫֡��
	PortRxPkt uint64 `protobuf:"varint,6,opt,name=port_rx_pkt,json=port-rx-pkt,proto3" json:"port_rx_pkt,omitempty"`
	//GPON�˿����ж��ж���ͳ��
	PortTxDiscardPkt uint64 `protobuf:"varint,7,opt,name=port_tx_discard_pkt,json=port-tx-discard-pkt,proto3" json:"port_tx_discard_pkt,omitempty"`
	//GPON�˿ڿڽ��շ���������̫֡����һ����MAC��У������֡��
	PortRxDiscardPkt uint64 `protobuf:"varint,8,opt,name=port_rx_discard_pkt,json=port-rx-discard-pkt,proto3" json:"port_rx_discard_pkt,omitempty"`
	//GPON�˿ڽ��շ������̫֡CRC����֡��
	PortRxCrcErrorPkt uint64 `protobuf:"varint,9,opt,name=port_rx_crc_error_pkt,json=port-rx-crc-error-pkt,proto3" json:"port_rx_crc_error_pkt,omitempty"`
	//GPON�˿ڽ��շ���������̫֡����֡��
	PortRxOversizedDiscardPkt uint64 `protobuf:"varint,10,opt,name=port_rx_oversized_discard_pkt,json=port-rx-oversized-discard-pkt,proto3" json:"port_rx_oversized_discard_pkt,omitempty"`
	//GPON�˿ڽ��շ���������̫֡����֡��
	PortRxUndersizedDiscardPkt uint64 `protobuf:"varint,11,opt,name=port_rx_undersized_discard_pkt,json=port-rx-undersized-discard-pkt,proto3" json:"port_rx_undersized_discard_pkt,omitempty"`
	//GPON�˿ڽ��յ���̫֡����֡��
	PortRxErrorPkt uint64 `protobuf:"varint,12,opt,name=port_rx_error_pkt,json=port-rx-error-pkt,proto3" json:"port_rx_error_pkt,omitempty"`
	//GPON�˿�����ƽ�����ʣ���λkbps
	PortTxRate uint32 `protobuf:"varint,13,opt,name=port_tx_rate,json=port-tx-rate,proto3" json:"port_tx_rate,omitempty"`
	//GPON�˿�����ƽ�����ʣ���λkbps
	PortRxRate uint32 `protobuf:"varint,14,opt,name=port_rx_rate,json=port-rx-rate,proto3" json:"port_rx_rate,omitempty"`
	//GPON�˿������뼶��ֵ���ʣ���λkbps
	PortTxPeakRate uint32 `protobuf:"varint,15,opt,name=port_tx_peak_rate,json=port-tx-peak-rate,proto3" json:"port_tx_peak_rate,omitempty"`
	//GPON�˿������뼶��ֵ���ʣ���λkbps
	PortRxPeakRate uint32 `protobuf:"varint,16,opt,name=port_rx_peak_rate,json=port-rx-peak-rate,proto3" json:"port_rx_peak_rate,omitempty"`
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) Reset() {
	*x = GponPmOltChannelTraffic_GponPmOltChannelTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GponPmOltChannelTraffic_GponPmOltChannelTraffic) ProtoMessage() {}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_an_gpon_pm_olt_traffic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GponPmOltChannelTraffic_GponPmOltChannelTraffic.ProtoReflect.Descriptor instead.
func (*GponPmOltChannelTraffic_GponPmOltChannelTraffic) Descriptor() ([]byte, []int) {
	return file_an_gpon_pm_olt_traffic_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortTxBytes() uint64 {
	if x != nil {
		return x.PortTxBytes
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxBytes() uint64 {
	if x != nil {
		return x.PortRxBytes
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortTxPkt() uint64 {
	if x != nil {
		return x.PortTxPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxPkt() uint64 {
	if x != nil {
		return x.PortRxPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortTxDiscardPkt() uint64 {
	if x != nil {
		return x.PortTxDiscardPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxDiscardPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxCrcErrorPkt() uint64 {
	if x != nil {
		return x.PortRxCrcErrorPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxOversizedDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxOversizedDiscardPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxUndersizedDiscardPkt() uint64 {
	if x != nil {
		return x.PortRxUndersizedDiscardPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxErrorPkt() uint64 {
	if x != nil {
		return x.PortRxErrorPkt
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortTxRate() uint32 {
	if x != nil {
		return x.PortTxRate
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxRate() uint32 {
	if x != nil {
		return x.PortRxRate
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortTxPeakRate() uint32 {
	if x != nil {
		return x.PortTxPeakRate
	}
	return 0
}

func (x *GponPmOltChannelTraffic_GponPmOltChannelTraffic) GetPortRxPeakRate() uint32 {
	if x != nil {
		return x.PortRxPeakRate
	}
	return 0
}

var File_an_gpon_pm_olt_traffic_proto protoreflect.FileDescriptor

var file_an_gpon_pm_olt_traffic_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x6e, 0x2d, 0x67, 0x70, 0x6f, 0x6e, 0x2d, 0x70, 0x6d, 0x2d, 0x6f, 0x6c, 0x74,
	0x2d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x61, 0x6e, 0x5f, 0x67, 0x70, 0x6f, 0x6e, 0x5f, 0x70, 0x6d, 0x5f, 0x6f, 0x6c, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0xaf, 0x06, 0x0a, 0x11, 0x47, 0x70, 0x6f, 0x6e, 0x50,
	0x6d, 0x4f, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x12, 0x67, 0x0a, 0x0e,
	0x70, 0x6d, 0x5f, 0x6f, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x5f, 0x67, 0x70, 0x6f, 0x6e, 0x5f, 0x70,
	0x6d, 0x5f, 0x6f, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x47, 0x70,
	0x6f, 0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x2e,
	0x47, 0x70, 0x6f, 0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x52, 0x13, 0x67, 0x70, 0x6f, 0x6e, 0x2d, 0x70, 0x6d, 0x2d, 0x6f, 0x6c, 0x74, 0x2d, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0xb0, 0x05, 0x0a, 0x10, 0x47, 0x70, 0x6f, 0x6e, 0x50, 0x6d,
	0x4f, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x6f, 0x72,
	0x74, 0x2d, 0x72, 0x78, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x6f, 0x72,
	0x74, 0x2d, 0x74, 0x78, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70,
	0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x70,
	0x6b, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x63, 0x72,
	0x63, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x15, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x63, 0x72, 0x63, 0x2d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x44, 0x0a, 0x1d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1d, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x7a,
	0x65, 0x64, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x46,
	0x0a, 0x1e, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x64, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72,
	0x78, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2d, 0x70, 0x6b, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74,
	0x2d, 0x74, 0x78, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x72, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78,
	0x2d, 0x70, 0x65, 0x61, 0x6b, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x70,
	0x65, 0x61, 0x6b, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x22, 0xf4, 0x06, 0x0a, 0x17, 0x47, 0x70, 0x6f,
	0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x12, 0x84, 0x01, 0x0a, 0x16, 0x70, 0x6d, 0x5f, 0x6f, 0x6c, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x61, 0x6e, 0x5f, 0x67, 0x70, 0x6f, 0x6e, 0x5f,
	0x70, 0x6d, 0x5f, 0x6f, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x47,
	0x70, 0x6f, 0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x47, 0x70, 0x6f, 0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x1b,
	0x67, 0x70, 0x6f, 0x6e, 0x2d, 0x70, 0x6d, 0x2d, 0x6f, 0x6c, 0x74, 0x2d, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0xd1, 0x05, 0x0a, 0x17,
	0x47, 0x70, 0x6f, 0x6e, 0x50, 0x6d, 0x4f, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x6f,
	0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x6b, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d,
	0x70, 0x6b, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x70,
	0x6b, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72,
	0x78, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x72, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x64, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x72, 0x78, 0x5f, 0x63, 0x72, 0x63, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70,
	0x6b, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72,
	0x78, 0x2d, 0x63, 0x72, 0x63, 0x2d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2d, 0x70, 0x6b, 0x74, 0x12,
	0x44, 0x0a, 0x1d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x64, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x46, 0x0a, 0x1e, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x70,
	0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65,
	0x64, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70,
	0x6b, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72,
	0x78, 0x2d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2d, 0x70, 0x6b, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x70,
	0x65, 0x61, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x6f, 0x72, 0x74, 0x2d, 0x74, 0x78, 0x2d, 0x70, 0x65, 0x61, 0x6b, 0x2d, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x65, 0x61,
	0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x6f,
	0x72, 0x74, 0x2d, 0x72, 0x78, 0x2d, 0x70, 0x65, 0x61, 0x6b, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_an_gpon_pm_olt_traffic_proto_rawDescOnce sync.Once
	file_an_gpon_pm_olt_traffic_proto_rawDescData = file_an_gpon_pm_olt_traffic_proto_rawDesc
)

func file_an_gpon_pm_olt_traffic_proto_rawDescGZIP() []byte {
	file_an_gpon_pm_olt_traffic_proto_rawDescOnce.Do(func() {
		file_an_gpon_pm_olt_traffic_proto_rawDescData = protoimpl.X.CompressGZIP(file_an_gpon_pm_olt_traffic_proto_rawDescData)
	})
	return file_an_gpon_pm_olt_traffic_proto_rawDescData
}

var file_an_gpon_pm_olt_traffic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_an_gpon_pm_olt_traffic_proto_goTypes = []interface{}{
	(*GponPmOltTraffics)(nil),                               // 0: an_gpon_pm_olt_traffic.GponPmOltTraffics
	(*GponPmOltChannelTraffic)(nil),                         // 1: an_gpon_pm_olt_traffic.GponPmOltChannelTraffic
	(*GponPmOltTraffics_GponPmOltTraffic)(nil),              // 2: an_gpon_pm_olt_traffic.GponPmOltTraffics.GponPmOltTraffic
	(*GponPmOltChannelTraffic_GponPmOltChannelTraffic)(nil), // 3: an_gpon_pm_olt_traffic.GponPmOltChannelTraffic.GponPmOltChannelTraffic
}
var file_an_gpon_pm_olt_traffic_proto_depIdxs = []int32{
	2, // 0: an_gpon_pm_olt_traffic.GponPmOltTraffics.pm_olt_traffic:type_name -> an_gpon_pm_olt_traffic.GponPmOltTraffics.GponPmOltTraffic
	3, // 1: an_gpon_pm_olt_traffic.GponPmOltChannelTraffic.pm_olt_channel_traffic:type_name -> an_gpon_pm_olt_traffic.GponPmOltChannelTraffic.GponPmOltChannelTraffic
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_an_gpon_pm_olt_traffic_proto_init() }
func file_an_gpon_pm_olt_traffic_proto_init() {
	if File_an_gpon_pm_olt_traffic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_an_gpon_pm_olt_traffic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GponPmOltTraffics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_an_gpon_pm_olt_traffic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GponPmOltChannelTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_an_gpon_pm_olt_traffic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GponPmOltTraffics_GponPmOltTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_an_gpon_pm_olt_traffic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GponPmOltChannelTraffic_GponPmOltChannelTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_an_gpon_pm_olt_traffic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_an_gpon_pm_olt_traffic_proto_goTypes,
		DependencyIndexes: file_an_gpon_pm_olt_traffic_proto_depIdxs,
		MessageInfos:      file_an_gpon_pm_olt_traffic_proto_msgTypes,
	}.Build()
	File_an_gpon_pm_olt_traffic_proto = out.File
	file_an_gpon_pm_olt_traffic_proto_rawDesc = nil
	file_an_gpon_pm_olt_traffic_proto_goTypes = nil
	file_an_gpon_pm_olt_traffic_proto_depIdxs = nil
}
