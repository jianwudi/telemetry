// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: an-bb-service-flow-kpi.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceFlowKpiRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceFlowKpiRecord []*ServiceFlowKpiRecords_ServiceFlowKpiRecord `protobuf:"bytes,1,rep,name=service_flow_kpi_record,json=service-flow-kpi-record,proto3" json:"service_flow_kpi_record,omitempty"`
}

func (x *ServiceFlowKpiRecords) Reset() {
	*x = ServiceFlowKpiRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_bb_service_flow_kpi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFlowKpiRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFlowKpiRecords) ProtoMessage() {}

func (x *ServiceFlowKpiRecords) ProtoReflect() protoreflect.Message {
	mi := &file_an_bb_service_flow_kpi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFlowKpiRecords.ProtoReflect.Descriptor instead.
func (*ServiceFlowKpiRecords) Descriptor() ([]byte, []int) {
	return file_an_bb_service_flow_kpi_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceFlowKpiRecords) GetServiceFlowKpiRecord() []*ServiceFlowKpiRecords_ServiceFlowKpiRecord {
	if x != nil {
		return x.ServiceFlowKpiRecord
	}
	return nil
}

type ServiceFlowKpiRecords_ServiceFlowKpiRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//vlan id
	Name uint32 `protobuf:"varint,1,opt,name=name,proto3" json:"name,omitempty"`
	//���з�����ж���������
	DownstreamQueueDropCnt uint64 `protobuf:"varint,2,opt,name=downstream_queue_drop_cnt,json=downstream-queue-drop-cnt,proto3" json:"downstream_queue_drop_cnt,omitempty"`
	//���з��������ͨ�����ܰ�����
	DownstreamQueuePassCnt uint64 `protobuf:"varint,3,opt,name=downstream_queue_pass_cnt,json=downstream-queue-pass-cnt,proto3" json:"downstream_queue_pass_cnt,omitempty"`
	//���з�������뼶�����������
	DownstreamQueueDropMax uint32 `protobuf:"varint,4,opt,name=downstream_queue_drop_max,json=downstream-queue-drop-max,proto3" json:"downstream_queue_drop_max,omitempty"`
	//���з�������뼶������С����
	DownstreamQueueDropMin uint32 `protobuf:"varint,5,opt,name=downstream_queue_drop_min,json=downstream-queue-drop-min,proto3" json:"downstream_queue_drop_min,omitempty"`
	//���з�������뼶������󶪰��ʡ�����󶪰���ʱ���Ӧ��ϵ����λ10^-5��
	DownstreamQueueDropRateMax uint32 `protobuf:"varint,6,opt,name=downstream_queue_drop_rate_max,json=downstream-queue-drop-rate-max,proto3" json:"downstream_queue_drop_rate_max,omitempty"`
	//���з�������뼶������С�����ʡ�����С������ʱ���Ӧ��ϵ����λ10^-5��
	DownstreamQueueDropRateMin uint32 `protobuf:"varint,7,opt,name=downstream_queue_drop_rate_min,json=downstream-queue-drop-rate-min,proto3" json:"downstream_queue_drop_rate_min,omitempty"`
	//���з�����з����������������ۼӡ�
	DownstreamQueueDropSecondsCnt uint32 `protobuf:"varint,8,opt,name=downstream_queue_drop_seconds_cnt,json=downstream-queue-drop-seconds-cnt,proto3" json:"downstream_queue_drop_seconds_cnt,omitempty"`
	//���з������ͨ�����ֽ�����
	DownstreamQueuePassBytes uint64 `protobuf:"varint,9,opt,name=downstream_queue_pass_bytes,json=downstream-queue-pass-bytes,proto3" json:"downstream_queue_pass_bytes,omitempty"`
	//ͳ�������ڣ����з���ƽ�����ʡ���λkbps��
	DownstreamMfrAvg uint32 `protobuf:"varint,10,opt,name=downstream_mfr_avg,json=downstream-mfr-avg,proto3" json:"downstream_mfr_avg,omitempty"`
	//���з���ͨ�����ֽ���
	UpstreamPassBytes uint64 `protobuf:"varint,11,opt,name=upstream_pass_bytes,json=upstream-pass-bytes,proto3" json:"upstream_pass_bytes,omitempty"`
	//���з���ͨ�����ܰ���
	UpstreamPassCnt uint64 `protobuf:"varint,12,opt,name=upstream_pass_cnt,json=upstream-pass-cnt,proto3" json:"upstream_pass_cnt,omitempty"`
	//���з��򶪰�����
	UpstreamDropCnt uint64 `protobuf:"varint,13,opt,name=upstream_drop_cnt,json=upstream-drop-cnt,proto3" json:"upstream_drop_cnt,omitempty"`
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) Reset() {
	*x = ServiceFlowKpiRecords_ServiceFlowKpiRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_an_bb_service_flow_kpi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFlowKpiRecords_ServiceFlowKpiRecord) ProtoMessage() {}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) ProtoReflect() protoreflect.Message {
	mi := &file_an_bb_service_flow_kpi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFlowKpiRecords_ServiceFlowKpiRecord.ProtoReflect.Descriptor instead.
func (*ServiceFlowKpiRecords_ServiceFlowKpiRecord) Descriptor() ([]byte, []int) {
	return file_an_bb_service_flow_kpi_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetName() uint32 {
	if x != nil {
		return x.Name
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropCnt() uint64 {
	if x != nil {
		return x.DownstreamQueueDropCnt
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueuePassCnt() uint64 {
	if x != nil {
		return x.DownstreamQueuePassCnt
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropMax() uint32 {
	if x != nil {
		return x.DownstreamQueueDropMax
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropMin() uint32 {
	if x != nil {
		return x.DownstreamQueueDropMin
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropRateMax() uint32 {
	if x != nil {
		return x.DownstreamQueueDropRateMax
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropRateMin() uint32 {
	if x != nil {
		return x.DownstreamQueueDropRateMin
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueueDropSecondsCnt() uint32 {
	if x != nil {
		return x.DownstreamQueueDropSecondsCnt
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamQueuePassBytes() uint64 {
	if x != nil {
		return x.DownstreamQueuePassBytes
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetDownstreamMfrAvg() uint32 {
	if x != nil {
		return x.DownstreamMfrAvg
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetUpstreamPassBytes() uint64 {
	if x != nil {
		return x.UpstreamPassBytes
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetUpstreamPassCnt() uint64 {
	if x != nil {
		return x.UpstreamPassCnt
	}
	return 0
}

func (x *ServiceFlowKpiRecords_ServiceFlowKpiRecord) GetUpstreamDropCnt() uint64 {
	if x != nil {
		return x.UpstreamDropCnt
	}
	return 0
}

var File_an_bb_service_flow_kpi_proto protoreflect.FileDescriptor

var file_an_bb_service_flow_kpi_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x6e, 0x2d, 0x62, 0x62, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d,
	0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x6b, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x61, 0x6e, 0x5f, 0x62, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x6b, 0x70, 0x69, 0x22, 0x98, 0x07, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4b, 0x70, 0x69, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x7c, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6b, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x5f, 0x62, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4b, 0x70, 0x69, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4b, 0x70, 0x69, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x66,
	0x6c, 0x6f, 0x77, 0x2d, 0x6b, 0x70, 0x69, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x80,
	0x06, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4b, 0x70,
	0x69, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19,
	0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2d, 0x64, 0x72, 0x6f, 0x70, 0x2d, 0x63, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x64, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x70,
	0x61, 0x73, 0x73, 0x2d, 0x63, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x64, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x64, 0x72, 0x6f,
	0x70, 0x2d, 0x6d, 0x61, 0x78, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x64, 0x72, 0x6f, 0x70, 0x2d,
	0x6d, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x1e, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x64, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x64, 0x72,
	0x6f, 0x70, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x61, 0x78, 0x12, 0x46, 0x0a, 0x1e, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1e, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x64, 0x72, 0x6f, 0x70, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x2d,
	0x6d, 0x69, 0x6e, 0x12, 0x4c, 0x0a, 0x21, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21,
	0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2d, 0x64, 0x72, 0x6f, 0x70, 0x2d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2d, 0x63, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x1b, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x2d, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x6d, 0x66, 0x72, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x6d, 0x66, 0x72, 0x2d,
	0x61, 0x76, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x13, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x2d,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x2d,
	0x63, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x64, 0x72, 0x6f, 0x70, 0x2d, 0x63, 0x6e,
	0x74, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_an_bb_service_flow_kpi_proto_rawDescOnce sync.Once
	file_an_bb_service_flow_kpi_proto_rawDescData = file_an_bb_service_flow_kpi_proto_rawDesc
)

func file_an_bb_service_flow_kpi_proto_rawDescGZIP() []byte {
	file_an_bb_service_flow_kpi_proto_rawDescOnce.Do(func() {
		file_an_bb_service_flow_kpi_proto_rawDescData = protoimpl.X.CompressGZIP(file_an_bb_service_flow_kpi_proto_rawDescData)
	})
	return file_an_bb_service_flow_kpi_proto_rawDescData
}

var file_an_bb_service_flow_kpi_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_an_bb_service_flow_kpi_proto_goTypes = []interface{}{
	(*ServiceFlowKpiRecords)(nil),                      // 0: an_bb_service_flow_kpi.ServiceFlowKpiRecords
	(*ServiceFlowKpiRecords_ServiceFlowKpiRecord)(nil), // 1: an_bb_service_flow_kpi.ServiceFlowKpiRecords.ServiceFlowKpiRecord
}
var file_an_bb_service_flow_kpi_proto_depIdxs = []int32{
	1, // 0: an_bb_service_flow_kpi.ServiceFlowKpiRecords.service_flow_kpi_record:type_name -> an_bb_service_flow_kpi.ServiceFlowKpiRecords.ServiceFlowKpiRecord
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_an_bb_service_flow_kpi_proto_init() }
func file_an_bb_service_flow_kpi_proto_init() {
	if File_an_bb_service_flow_kpi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_an_bb_service_flow_kpi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFlowKpiRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_an_bb_service_flow_kpi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFlowKpiRecords_ServiceFlowKpiRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_an_bb_service_flow_kpi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_an_bb_service_flow_kpi_proto_goTypes,
		DependencyIndexes: file_an_bb_service_flow_kpi_proto_depIdxs,
		MessageInfos:      file_an_bb_service_flow_kpi_proto_msgTypes,
	}.Build()
	File_an_bb_service_flow_kpi_proto = out.File
	file_an_bb_service_flow_kpi_proto_rawDesc = nil
	file_an_bb_service_flow_kpi_proto_goTypes = nil
	file_an_bb_service_flow_kpi_proto_depIdxs = nil
}
